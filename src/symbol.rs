use serde::{Deserialize, Serialize};

use crate::{Feed, SubscribeInfo};



/// All available symbols on binance, updated 2024-11-17
/// Based on this [list](https://support.binance.us/hc/en-us/articles/360049417674-List-of-supported-cryptocurrencies) 
#[derive(Clone, Hash, Eq, PartialEq, PartialOrd, Ord, Serialize, Deserialize)]
pub enum Symbol {
    AAVEUSDT,
    ACHUSDT,
    ADABTC,
    ADAETH,
    ADAUSDC,
    ADAUSDT,
    ALGOUSDT,
    ALICEUSDT,
    ALPINEUSDT,
    ANKRUSDT,
    APEUSDT,
    API3USDT,
    APTUSDT,
    ARBUSDT,
    ASTRUSDT,
    ATOMUSDT,
    AUDIOUSDT,
    AVAXBTC,
    AVAXUSDT,
    AXLUSDT,
    AXSUSDT,
    AdExUSDT,
    BALUSDT,
    BANDUSDT,
    BATUSDT,
    BCHUSDT,
    BICOUSDT,
    BLURUSDT,
    BNBBTC,
    BNBUSDT,
    BNTUSDT,
    BONKUSDT,
    BOSONUSDT,
    BTCUSDC,
    BTCUSDT,
    BTRSTUSDT,
    CELOUSDT,
    CELRUSDT,
    CHZUSDT,
    CLVUSDT,
    COMPUSDT,
    COTIUSDT,
    CRVUSDT,
    CTSIUSDT,
    DAIUSDT,
    DARUSDT,
    DASHUSDT,
    DGBUSDT,
    DIAUSDT,
    DOGEBTC,
    DOGEUSDT,
    DOTUSDT,
    EGLDUSDT,
    ENJUSDT,
    ENSUSDT,
    EOSUSDT,
    ERC20,
    ETCUSDT,
    ETHBTC,
    ETHUSDC,
    ETHUSDT,
    FETUSDT,
    FILUSDT,
    FLUXUSDT,
    FORTHUSDT,
    FORTUSDT,
    FTMUSDT,
    GALAUSDT,
    GLMUSDT,
    GRTUSDT,
    GTCUSDT,
    GUSDT,
    HBARUSDT,
    ICPUSDT,
    ICXUSDT,
    ILVUSDT,
    IMXUSDT,
    IOSTUSDT,
    IOTAUSDT,
    JAMUSDT,
    KAVAUSDT,
    KDAUSDT,
    KNCUSDT,
    KSMUSDT,
    LAZIOUSDT,
    LDOUSDT,
    LINKBTC,
    LINKUSDT,
    LOKAUSDT,
    LOOMUSDT,
    LPTUSDT,
    LRCUSDT,
    LSKUSDT,
    LTCBTC,
    LTCUSDT,
    LTOUSDT,
    MANAUSDT,
    MASKUSDT,
    MATICBTC,
    MATICETH,
    MATICUSDT,
    MKRUSDT,
    MXCUSDT,
    NEARUSDT,
    NEOUSDT,
    NMRUSDT,
    OCEANUSDT,
    OGNUSDT,
    ONEINCHUSDT,
    ONEUSDT,
    ONGUSDT,
    ONTUSDT,
    OPUSDT,
    ORBSUSDT,
    OXTUSDT,
    PAXGUSDT,
    POLYXUSDT,
    PONDUSDT,
    PORTOUSDT,
    PROMUSDT,
    QNTUSDT,
    QTUMUSDT,
    RADUSDT,
    RAREUSDT,
    REEFUSDT,
    RENDERUSDT,
    RENUSDT,
    REQUSDT,
    RLCUSDT,
    ROSEUSDT,
    RVNUSDT,
    SANDUSDT,
    SANTOSUSDT,
    SHIBUSDT,
    SKLUSDT,
    SLPUSDT,
    SNXUSDT,
    SOLBTC,
    SOLETH,
    SOLUSDC,
    SOLUSDT,
    STGUSDT,
    STMXUSDT,
    STORJUSDT,
    SUIUSDT,
    SUSHIUSDT,
    SYSUSDT,
    THETAUSDT,
    TLMUSDT,
    TRACUSDT,
    TUSDT,
    UNIUSDT,
    USDCUSDT,
    USDT,
    USDTUSD,
    VETUSDT,
    VITEUSDT,
    VOXELUSDT,
    VTHOUSDT,
    WAXPUSDT,
    WBTCBTC,
    XECUSDT,
    XLMUSDT,
    XNOUSDT,
    XRPUSDT,
    XTZUSDT,
    YFIUSDT,
    ZECUSDT,
    ZENUSDT,
    ZILUSDT,
    ZRXUSDT,
}

impl std::fmt::Debug for Symbol {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let s = match self {
            Symbol::AAVEUSDT => "aaveusdt",
            Symbol::ACHUSDT => "achusdt",
            Symbol::ADABTC => "adabtc",
            Symbol::ADAETH => "adaeth",
            Symbol::ADAUSDC => "adausdc",
            Symbol::ADAUSDT => "adausdt",
            Symbol::ALGOUSDT => "algousdt",
            Symbol::ALICEUSDT => "aliceusdt",
            Symbol::ALPINEUSDT => "alpineusdt",
            Symbol::ANKRUSDT => "ankrusdt",
            Symbol::APEUSDT => "apeusdt",
            Symbol::API3USDT => "api3usdt",
            Symbol::APTUSDT => "aptusdt",
            Symbol::ARBUSDT => "arbusdt",
            Symbol::ASTRUSDT => "astrusdt",
            Symbol::ATOMUSDT => "atomusdt",
            Symbol::AUDIOUSDT => "audiousdt",
            Symbol::AVAXBTC => "avaxbtc",
            Symbol::AVAXUSDT => "avaxusdt",
            Symbol::AXLUSDT => "axlusdt",
            Symbol::AXSUSDT => "axsusdt",
            Symbol::AdExUSDT => "adexusdt",
            Symbol::BALUSDT => "balusdt",
            Symbol::BANDUSDT => "bandusdt",
            Symbol::BATUSDT => "batusdt",
            Symbol::BCHUSDT => "bchusdt",
            Symbol::BICOUSDT => "bicousdt",
            Symbol::BLURUSDT => "blurusdt",
            Symbol::BNBBTC => "bnbbtc",
            Symbol::BNBUSDT => "bnbusdt",
            Symbol::BNTUSDT => "bntusdt",
            Symbol::BONKUSDT => "bonkusdt",
            Symbol::BOSONUSDT => "bosonusdt",
            Symbol::BTCUSDC => "btcusdc",
            Symbol::BTCUSDT => "btcusdt",
            Symbol::BTRSTUSDT => "btrstusdt",
            Symbol::CELOUSDT => "celousdt",
            Symbol::CELRUSDT => "celrusdt",
            Symbol::CHZUSDT => "chzusdt",
            Symbol::CLVUSDT => "clvusdt",
            Symbol::COMPUSDT => "compusdt",
            Symbol::COTIUSDT => "cotiusdt",
            Symbol::CRVUSDT => "crvusdt",
            Symbol::CTSIUSDT => "ctsiusdt",
            Symbol::DAIUSDT => "daiusdt",
            Symbol::DARUSDT => "darusdt",
            Symbol::DASHUSDT => "dashusdt",
            Symbol::DGBUSDT => "dgbusdt",
            Symbol::DIAUSDT => "diausdt",
            Symbol::DOGEBTC => "dogebtc",
            Symbol::DOGEUSDT => "dogeusdt",
            Symbol::DOTUSDT => "dotusdt",
            Symbol::EGLDUSDT => "egldusdt",
            Symbol::ENJUSDT => "enjusdt",
            Symbol::ENSUSDT => "ensusdt",
            Symbol::EOSUSDT => "eosusdt",
            Symbol::ERC20 => "erc20",
            Symbol::ETCUSDT => "etcusdt",
            Symbol::ETHBTC => "ethbtc",
            Symbol::ETHUSDC => "ethusdc",
            Symbol::ETHUSDT => "ethusdt",
            Symbol::FETUSDT => "fetusdt",
            Symbol::FILUSDT => "filusdt",
            Symbol::FLUXUSDT => "fluxusdt",
            Symbol::FORTHUSDT => "forthusdt",
            Symbol::FORTUSDT => "fortusdt",
            Symbol::FTMUSDT => "ftmusdt",
            Symbol::GALAUSDT => "galausdt",
            Symbol::GLMUSDT => "glmusdt",
            Symbol::GRTUSDT => "grtusdt",
            Symbol::GTCUSDT => "gtcusdt",
            Symbol::GUSDT => "gusdt",
            Symbol::HBARUSDT => "hbarusdt",
            Symbol::ICPUSDT => "icpusdt",
            Symbol::ICXUSDT => "icxusdt",
            Symbol::ILVUSDT => "ilvusdt",
            Symbol::IMXUSDT => "imxusdt",
            Symbol::IOSTUSDT => "iostusdt",
            Symbol::IOTAUSDT => "iotausdt",
            Symbol::JAMUSDT => "jamusdt",
            Symbol::KAVAUSDT => "kavausdt",
            Symbol::KDAUSDT => "kdausdt",
            Symbol::KNCUSDT => "kncusdt",
            Symbol::KSMUSDT => "ksmusdt",
            Symbol::LAZIOUSDT => "laziousdt",
            Symbol::LDOUSDT => "ldousdt",
            Symbol::LINKBTC => "linkbtc",
            Symbol::LINKUSDT => "linkusdt",
            Symbol::LOKAUSDT => "lokausdt",
            Symbol::LOOMUSDT => "loomusdt",
            Symbol::LPTUSDT => "lptusdt",
            Symbol::LRCUSDT => "lrcusdt",
            Symbol::LSKUSDT => "lskusdt",
            Symbol::LTCBTC => "ltcbtc",
            Symbol::LTCUSDT => "ltcusdt",
            Symbol::LTOUSDT => "ltousdt",
            Symbol::MANAUSDT => "manausdt",
            Symbol::MASKUSDT => "maskusdt",
            Symbol::MATICBTC => "maticbtc",
            Symbol::MATICETH => "maticeth",
            Symbol::MATICUSDT => "maticusdt",
            Symbol::MKRUSDT => "mkrusdt",
            Symbol::MXCUSDT => "mxcusdt",
            Symbol::NEARUSDT => "nearusdt",
            Symbol::NEOUSDT => "neousdt",
            Symbol::NMRUSDT => "nmrusdt",
            Symbol::OCEANUSDT => "oceanusdt",
            Symbol::OGNUSDT => "ognusdt",
            Symbol::ONEINCHUSDT => "oneinchusdt",
            Symbol::ONEUSDT => "oneusdt",
            Symbol::ONGUSDT => "ongusdt",
            Symbol::ONTUSDT => "ontusdt",
            Symbol::OPUSDT => "opusdt",
            Symbol::ORBSUSDT => "orbsusdt",
            Symbol::OXTUSDT => "oxtusdt",
            Symbol::PAXGUSDT => "paxgusdt",
            Symbol::POLYXUSDT => "polyxusdt",
            Symbol::PONDUSDT => "pondusdt",
            Symbol::PORTOUSDT => "portousdt",
            Symbol::PROMUSDT => "promusdt",
            Symbol::QNTUSDT => "qntusdt",
            Symbol::QTUMUSDT => "qtumusdt",
            Symbol::RADUSDT => "radusdt",
            Symbol::RAREUSDT => "rareusdt",
            Symbol::REEFUSDT => "reefusdt",
            Symbol::RENDERUSDT => "renderusdt",
            Symbol::RENUSDT => "renusdt",
            Symbol::REQUSDT => "requsdt",
            Symbol::RLCUSDT => "rlcusdt",
            Symbol::ROSEUSDT => "roseusdt",
            Symbol::RVNUSDT => "rvnusdt",
            Symbol::SANDUSDT => "sandusdt",
            Symbol::SANTOSUSDT => "santosusdt",
            Symbol::SHIBUSDT => "shibusdt",
            Symbol::SKLUSDT => "sklusdt",
            Symbol::SLPUSDT => "slpusdt",
            Symbol::SNXUSDT => "snxusdt",
            Symbol::SOLBTC => "solbtc",
            Symbol::SOLETH => "soleth",
            Symbol::SOLUSDC => "solusdc",
            Symbol::SOLUSDT => "solusdt",
            Symbol::STGUSDT => "stgusdt",
            Symbol::STMXUSDT => "stmxusdt",
            Symbol::STORJUSDT => "storjusdt",
            Symbol::SUIUSDT => "suiusdt",
            Symbol::SUSHIUSDT => "sushiusdt",
            Symbol::SYSUSDT => "sysusdt",
            Symbol::THETAUSDT => "thetausdt",
            Symbol::TLMUSDT => "tlmusdt",
            Symbol::TRACUSDT => "tracusdt",
            Symbol::TUSDT => "tusdt",
            Symbol::UNIUSDT => "uniusdt",
            Symbol::USDCUSDT => "usdcusdt",
            Symbol::USDT => "usdt",
            Symbol::USDTUSD => "usdtusd",
            Symbol::VETUSDT => "vetusdt",
            Symbol::VITEUSDT => "viteusdt",
            Symbol::VOXELUSDT => "voxelusdt",
            Symbol::VTHOUSDT => "vthousdt",
            Symbol::WAXPUSDT => "waxpusdt",
            Symbol::WBTCBTC => "wbtcbtc",
            Symbol::XECUSDT => "xecusdt",
            Symbol::XLMUSDT => "xlmusdt",
            Symbol::XNOUSDT => "xnousdt",
            Symbol::XRPUSDT => "xrpusdt",
            Symbol::XTZUSDT => "xtzusdt",
            Symbol::YFIUSDT => "yfiusdt",
            Symbol::ZECUSDT => "zecusdt",
            Symbol::ZENUSDT => "zenusdt",
            Symbol::ZILUSDT => "zilusdt",
            Symbol::ZRXUSDT => "zrxusdt",
        };

        write!(f, "{}", s)
    }
}

impl std::fmt::Display for Symbol {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(f, "{:?}", self)
    }
}

pub fn subscribe_msg_all_symbols(feed: Feed) -> Vec<SubscribeInfo> {
    vec![
        SubscribeInfo::new(Symbol::AAVEUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ACHUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ADABTC, feed.clone()),
        SubscribeInfo::new(Symbol::ADAETH, feed.clone()),
        SubscribeInfo::new(Symbol::ADAUSDC, feed.clone()),
        SubscribeInfo::new(Symbol::ADAUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ALGOUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ALICEUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ALPINEUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ANKRUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::APEUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::API3USDT, feed.clone()),
        SubscribeInfo::new(Symbol::APTUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ARBUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ASTRUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ATOMUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::AUDIOUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::AVAXBTC, feed.clone()),
        SubscribeInfo::new(Symbol::AVAXUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::AXLUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::AXSUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::AdExUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::BALUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::BANDUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::BATUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::BCHUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::BICOUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::BLURUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::BNBBTC, feed.clone()),
        SubscribeInfo::new(Symbol::BNBUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::BNTUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::BONKUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::BOSONUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::BTCUSDC, feed.clone()),
        SubscribeInfo::new(Symbol::BTCUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::BTRSTUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::CELOUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::CELRUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::CHZUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::CLVUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::COMPUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::COTIUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::CRVUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::CTSIUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::DAIUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::DARUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::DASHUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::DGBUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::DIAUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::DOGEBTC, feed.clone()),
        SubscribeInfo::new(Symbol::DOGEUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::DOTUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::EGLDUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ENJUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ENSUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::EOSUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ERC20, feed.clone()),
        SubscribeInfo::new(Symbol::ETCUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ETHBTC, feed.clone()),
        SubscribeInfo::new(Symbol::ETHUSDC, feed.clone()),
        SubscribeInfo::new(Symbol::ETHUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::FETUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::FILUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::FLUXUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::FORTHUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::FORTUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::FTMUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::GALAUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::GLMUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::GRTUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::GTCUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::GUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::HBARUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ICPUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ICXUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ILVUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::IMXUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::IOSTUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::IOTAUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::JAMUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::KAVAUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::KDAUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::KNCUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::KSMUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::LAZIOUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::LDOUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::LINKBTC, feed.clone()),
        SubscribeInfo::new(Symbol::LINKUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::LOKAUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::LOOMUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::LPTUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::LRCUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::LSKUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::LTCBTC, feed.clone()),
        SubscribeInfo::new(Symbol::LTCUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::LTOUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::MANAUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::MASKUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::MATICBTC, feed.clone()),
        SubscribeInfo::new(Symbol::MATICETH, feed.clone()),
        SubscribeInfo::new(Symbol::MATICUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::MKRUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::MXCUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::NEARUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::NEOUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::NMRUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::OCEANUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::OGNUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ONEINCHUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ONEUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ONGUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ONTUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::OPUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ORBSUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::OXTUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::PAXGUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::POLYXUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::PONDUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::PORTOUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::PROMUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::QNTUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::QTUMUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::RADUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::RAREUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::REEFUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::RENDERUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::RENUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::REQUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::RLCUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ROSEUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::RVNUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::SANDUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::SANTOSUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::SHIBUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::SKLUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::SLPUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::SNXUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::SOLBTC, feed.clone()),
        SubscribeInfo::new(Symbol::SOLETH, feed.clone()),
        SubscribeInfo::new(Symbol::SOLUSDC, feed.clone()),
        SubscribeInfo::new(Symbol::SOLUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::STGUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::STMXUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::STORJUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::SUIUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::SUSHIUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::SYSUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::THETAUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::TLMUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::TRACUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::TUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::UNIUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::USDCUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::USDT, feed.clone()),
        SubscribeInfo::new(Symbol::USDTUSD, feed.clone()),
        SubscribeInfo::new(Symbol::VETUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::VITEUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::VOXELUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::VTHOUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::WAXPUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::WBTCBTC, feed.clone()),
        SubscribeInfo::new(Symbol::XECUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::XLMUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::XNOUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::XRPUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::XTZUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::YFIUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ZECUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ZENUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ZILUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::ZRXUSDT, feed.clone()),
        SubscribeInfo::new(Symbol::BTCUSDT, feed.clone()),
    ]
}
